{"version":3,"file":"static/webpack/static/development/pages/_app.js.a4f62e30f5bf7425a6fc.hot-update.js","sources":["webpack:///./src/services/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isServer } from '../utils/isServer';\nimport GithubService from './github';\nimport ReadmeService from './readme';\n\nlet clientSideServices;\n\nconst getServices = (initialData = { github: {} }) => {\n  if (isServer) {\n    return {\n      githubService: new GithubService(initialData.github),\n      readmeService: new ReadmeService(initialData.readme),\n    };\n  }\n  if (!clientSideServices) {\n    clientSideServices = {\n      githubService: new GithubService(initialData.github),\n      readmeService: new ReadmeService(initialData.readme),\n    };\n  }\n\n  return clientSideServices;\n};\n\nconst ServiceContext = React.createContext();\n\nconst ServiceProvider = ({ value, children }) => (\n  <ServiceContext.Provider value={value}>{children}</ServiceContext.Provider>\n);\n\nServiceProvider.propTypes = {\n  value: PropTypes.shape({\n    githubService: PropTypes.object.isRequired,\n    readmeService: PropTypes.object.isRequired,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst useMobxServices = () => React.useContext(ServiceContext);\n\nexport { getServices, ServiceProvider, useMobxServices };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AALA;AACA;AAOA;AAAA;AAAA;AACA;;;;;A","sourceRoot":""}